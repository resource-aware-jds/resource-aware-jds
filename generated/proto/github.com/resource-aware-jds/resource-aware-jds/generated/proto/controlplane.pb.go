// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: proto/controlplane.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DistributionLogic int32

const (
	DistributionLogic_Unspecified   DistributionLogic = 0
	DistributionLogic_RoundRobin    DistributionLogic = 1
	DistributionLogic_ResourceAware DistributionLogic = 2
)

// Enum value maps for DistributionLogic.
var (
	DistributionLogic_name = map[int32]string{
		0: "Unspecified",
		1: "RoundRobin",
		2: "ResourceAware",
	}
	DistributionLogic_value = map[string]int32{
		"Unspecified":   0,
		"RoundRobin":    1,
		"ResourceAware": 2,
	}
)

func (x DistributionLogic) Enum() *DistributionLogic {
	p := new(DistributionLogic)
	*p = x
	return p
}

func (x DistributionLogic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DistributionLogic) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_controlplane_proto_enumTypes[0].Descriptor()
}

func (DistributionLogic) Type() protoreflect.EnumType {
	return &file_proto_controlplane_proto_enumTypes[0]
}

func (x DistributionLogic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DistributionLogic.Descriptor instead.
func (DistributionLogic) EnumDescriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{0}
}

type ReportSuccessTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeID            string             `protobuf:"bytes,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Result            []byte             `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	TaskResourceUsage *TaskResourceUsage `protobuf:"bytes,4,opt,name=taskResourceUsage,proto3" json:"taskResourceUsage,omitempty"`
}

func (x *ReportSuccessTaskRequest) Reset() {
	*x = ReportSuccessTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportSuccessTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSuccessTaskRequest) ProtoMessage() {}

func (x *ReportSuccessTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSuccessTaskRequest.ProtoReflect.Descriptor instead.
func (*ReportSuccessTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{0}
}

func (x *ReportSuccessTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReportSuccessTaskRequest) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *ReportSuccessTaskRequest) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ReportSuccessTaskRequest) GetTaskResourceUsage() *TaskResourceUsage {
	if x != nil {
		return x.TaskResourceUsage
	}
	return nil
}

type TaskResourceUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AverageCpuUsage    float32 `protobuf:"fixed32,2,opt,name=AverageCpuUsage,proto3" json:"AverageCpuUsage,omitempty"`
	AverageMemoryUsage string  `protobuf:"bytes,3,opt,name=AverageMemoryUsage,proto3" json:"AverageMemoryUsage,omitempty"`
}

func (x *TaskResourceUsage) Reset() {
	*x = TaskResourceUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResourceUsage) ProtoMessage() {}

func (x *TaskResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResourceUsage.ProtoReflect.Descriptor instead.
func (*TaskResourceUsage) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{1}
}

func (x *TaskResourceUsage) GetAverageCpuUsage() float32 {
	if x != nil {
		return x.AverageCpuUsage
	}
	return 0
}

func (x *TaskResourceUsage) GetAverageMemoryUsage() string {
	if x != nil {
		return x.AverageMemoryUsage
	}
	return ""
}

type ReportFailureTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeID  string `protobuf:"bytes,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReportFailureTaskRequest) Reset() {
	*x = ReportFailureTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportFailureTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFailureTaskRequest) ProtoMessage() {}

func (x *ReportFailureTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFailureTaskRequest.ProtoReflect.Descriptor instead.
func (*ReportFailureTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{2}
}

func (x *ReportFailureTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReportFailureTaskRequest) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *ReportFailureTaskRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WorkerCheckInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port        int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Certificate []byte `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *WorkerCheckInRequest) Reset() {
	*x = WorkerCheckInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerCheckInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerCheckInRequest) ProtoMessage() {}

func (x *WorkerCheckInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerCheckInRequest.ProtoReflect.Descriptor instead.
func (*WorkerCheckInRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{3}
}

func (x *WorkerCheckInRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *WorkerCheckInRequest) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type ComputeNodeRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port          int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	NodePublicKey []byte `protobuf:"bytes,2,opt,name=nodePublicKey,proto3" json:"nodePublicKey,omitempty"`
}

func (x *ComputeNodeRegistrationRequest) Reset() {
	*x = ComputeNodeRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeNodeRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeNodeRegistrationRequest) ProtoMessage() {}

func (x *ComputeNodeRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeNodeRegistrationRequest.ProtoReflect.Descriptor instead.
func (*ComputeNodeRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{4}
}

func (x *ComputeNodeRegistrationRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ComputeNodeRegistrationRequest) GetNodePublicKey() []byte {
	if x != nil {
		return x.NodePublicKey
	}
	return nil
}

type ComputeNodeRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Certificate []byte `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *ComputeNodeRegistrationResponse) Reset() {
	*x = ComputeNodeRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeNodeRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeNodeRegistrationResponse) ProtoMessage() {}

func (x *ComputeNodeRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeNodeRegistrationResponse.ProtoReflect.Descriptor instead.
func (*ComputeNodeRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{5}
}

func (x *ComputeNodeRegistrationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComputeNodeRegistrationResponse) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type ControlPlaneTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status         string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	TaskAttributes []byte `protobuf:"bytes,3,opt,name=TaskAttributes,proto3" json:"TaskAttributes,omitempty"`
}

func (x *ControlPlaneTask) Reset() {
	*x = ControlPlaneTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlPlaneTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlPlaneTask) ProtoMessage() {}

func (x *ControlPlaneTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlPlaneTask.ProtoReflect.Descriptor instead.
func (*ControlPlaneTask) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{6}
}

func (x *ControlPlaneTask) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ControlPlaneTask) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ControlPlaneTask) GetTaskAttributes() []byte {
	if x != nil {
		return x.TaskAttributes
	}
	return nil
}

type CreateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ImageURL          string            `protobuf:"bytes,2,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	TaskAttributes    [][]byte          `protobuf:"bytes,3,rep,name=TaskAttributes,proto3" json:"TaskAttributes,omitempty"`
	IsExperiment      bool              `protobuf:"varint,4,opt,name=IsExperiment,proto3" json:"IsExperiment,omitempty"`
	DistributionLogic DistributionLogic `protobuf:"varint,5,opt,name=DistributionLogic,proto3,enum=controlplane.DistributionLogic" json:"DistributionLogic,omitempty"`
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{7}
}

func (x *CreateJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateJobRequest) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *CreateJobRequest) GetTaskAttributes() [][]byte {
	if x != nil {
		return x.TaskAttributes
	}
	return nil
}

func (x *CreateJobRequest) GetIsExperiment() bool {
	if x != nil {
		return x.IsExperiment
	}
	return false
}

func (x *CreateJobRequest) GetDistributionLogic() DistributionLogic {
	if x != nil {
		return x.DistributionLogic
	}
	return DistributionLogic_Unspecified
}

type CreateJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Tasks    []*ControlPlaneTask `protobuf:"bytes,2,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
	Status   string              `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	ImageURL string              `protobuf:"bytes,4,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
}

func (x *CreateJobResponse) Reset() {
	*x = CreateJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobResponse) ProtoMessage() {}

func (x *CreateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobResponse.ProtoReflect.Descriptor instead.
func (*CreateJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{8}
}

func (x *CreateJobResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CreateJobResponse) GetTasks() []*ControlPlaneTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *CreateJobResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateJobResponse) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

var File_proto_controlplane_proto protoreflect.FileDescriptor

var file_proto_controlplane_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x4d, 0x0a, 0x11, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11,
	0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x6d, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x5c, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4c,
	0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x1e,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x53, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x62, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x22, 0xdd, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e,
	0x54, 0x61, 0x73, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x49, 0x73, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x52, 0x11,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x2a, 0x47, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x6f, 0x62, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x77, 0x61, 0x72, 0x65, 0x10, 0x02, 0x32, 0xc6, 0x03, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x1e, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0d,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x12, 0x22, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x11, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x53,
	0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x77, 0x61, 0x72, 0x65,
	0x2d, 0x6a, 0x64, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x77,
	0x61, 0x72, 0x65, 0x2d, 0x6a, 0x64, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_controlplane_proto_rawDescOnce sync.Once
	file_proto_controlplane_proto_rawDescData = file_proto_controlplane_proto_rawDesc
)

func file_proto_controlplane_proto_rawDescGZIP() []byte {
	file_proto_controlplane_proto_rawDescOnce.Do(func() {
		file_proto_controlplane_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_controlplane_proto_rawDescData)
	})
	return file_proto_controlplane_proto_rawDescData
}

var file_proto_controlplane_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_controlplane_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_controlplane_proto_goTypes = []interface{}{
	(DistributionLogic)(0),                  // 0: controlplane.DistributionLogic
	(*ReportSuccessTaskRequest)(nil),        // 1: controlplane.ReportSuccessTaskRequest
	(*TaskResourceUsage)(nil),               // 2: controlplane.TaskResourceUsage
	(*ReportFailureTaskRequest)(nil),        // 3: controlplane.ReportFailureTaskRequest
	(*WorkerCheckInRequest)(nil),            // 4: controlplane.WorkerCheckInRequest
	(*ComputeNodeRegistrationRequest)(nil),  // 5: controlplane.ComputeNodeRegistrationRequest
	(*ComputeNodeRegistrationResponse)(nil), // 6: controlplane.ComputeNodeRegistrationResponse
	(*ControlPlaneTask)(nil),                // 7: controlplane.ControlPlaneTask
	(*CreateJobRequest)(nil),                // 8: controlplane.CreateJobRequest
	(*CreateJobResponse)(nil),               // 9: controlplane.CreateJobResponse
	(*emptypb.Empty)(nil),                   // 10: google.protobuf.Empty
}
var file_proto_controlplane_proto_depIdxs = []int32{
	2,  // 0: controlplane.ReportSuccessTaskRequest.taskResourceUsage:type_name -> controlplane.TaskResourceUsage
	0,  // 1: controlplane.CreateJobRequest.DistributionLogic:type_name -> controlplane.DistributionLogic
	7,  // 2: controlplane.CreateJobResponse.Tasks:type_name -> controlplane.ControlPlaneTask
	5,  // 3: controlplane.ControlPlane.WorkerRegistration:input_type -> controlplane.ComputeNodeRegistrationRequest
	8,  // 4: controlplane.ControlPlane.CreateJob:input_type -> controlplane.CreateJobRequest
	4,  // 5: controlplane.ControlPlane.WorkerCheckIn:input_type -> controlplane.WorkerCheckInRequest
	3,  // 6: controlplane.ControlPlane.ReportFailureTask:input_type -> controlplane.ReportFailureTaskRequest
	1,  // 7: controlplane.ControlPlane.ReportSuccessTask:input_type -> controlplane.ReportSuccessTaskRequest
	6,  // 8: controlplane.ControlPlane.WorkerRegistration:output_type -> controlplane.ComputeNodeRegistrationResponse
	9,  // 9: controlplane.ControlPlane.CreateJob:output_type -> controlplane.CreateJobResponse
	10, // 10: controlplane.ControlPlane.WorkerCheckIn:output_type -> google.protobuf.Empty
	10, // 11: controlplane.ControlPlane.ReportFailureTask:output_type -> google.protobuf.Empty
	10, // 12: controlplane.ControlPlane.ReportSuccessTask:output_type -> google.protobuf.Empty
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_controlplane_proto_init() }
func file_proto_controlplane_proto_init() {
	if File_proto_controlplane_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_controlplane_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportSuccessTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResourceUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportFailureTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerCheckInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeNodeRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeNodeRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlPlaneTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_controlplane_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_controlplane_proto_goTypes,
		DependencyIndexes: file_proto_controlplane_proto_depIdxs,
		EnumInfos:         file_proto_controlplane_proto_enumTypes,
		MessageInfos:      file_proto_controlplane_proto_msgTypes,
	}.Build()
	File_proto_controlplane_proto = out.File
	file_proto_controlplane_proto_rawDesc = nil
	file_proto_controlplane_proto_goTypes = nil
	file_proto_controlplane_proto_depIdxs = nil
}
